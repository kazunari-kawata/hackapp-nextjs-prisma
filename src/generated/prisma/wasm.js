
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  icon_url: 'icon_url',
  karma_score: 'karma_score'
};

exports.Prisma.PostScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  title: 'title',
  content: 'content',
  created_at: 'created_at'
};

exports.Prisma.CommentScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  user_id: 'user_id',
  content: 'content',
  created_at: 'created_at'
};

exports.Prisma.PostLikeScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  user_id: 'user_id',
  created_at: 'created_at'
};

exports.Prisma.PostVoteScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  user_id: 'user_id',
  vote_type: 'vote_type',
  created_at: 'created_at'
};

exports.Prisma.CommentLikeScalarFieldEnum = {
  id: 'id',
  comment_id: 'comment_id',
  user_id: 'user_id',
  created_at: 'created_at'
};

exports.Prisma.CommentVoteScalarFieldEnum = {
  id: 'id',
  comment_id: 'comment_id',
  user_id: 'user_id',
  vote_type: 'vote_type',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  username: 'username',
  icon_url: 'icon_url'
};

exports.Prisma.PostOrderByRelevanceFieldEnum = {
  title: 'title',
  content: 'content'
};

exports.Prisma.CommentOrderByRelevanceFieldEnum = {
  content: 'content'
};
exports.VoteType = exports.$Enums.VoteType = {
  GOOD: 'GOOD',
  BAD: 'BAD'
};

exports.Prisma.ModelName = {
  User: 'User',
  Post: 'Post',
  Comment: 'Comment',
  PostLike: 'PostLike',
  PostVote: 'PostVote',
  CommentLike: 'CommentLike',
  CommentVote: 'CommentVote'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/kawatakazunari/Desktop/hackapp-nextjs-prisma/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/kawatakazunari/Desktop/hackapp-nextjs-prisma/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n/// --- ユーザー関連 ---\nmodel User {\n  id          Int     @id @default(autoincrement())\n  username    String  @unique\n  icon_url    String?\n  // コミュニティへの貢献度（カルマスコア）\n  karma_score Int     @default(0)\n\n  posts         Post[]\n  comments      Comment[]\n  post_likes    PostLike[]\n  post_votes    PostVote[]\n  comment_likes CommentLike[]\n  comment_votes CommentVote[]\n}\n\n/// --- 投稿関連 ---\nmodel Post {\n  id         Int        @id @default(autoincrement())\n  user_id    Int\n  title      String     @unique\n  content    String\n  created_at DateTime   @default(now())\n  user       User       @relation(fields: [user_id], references: [id])\n  likes      PostLike[]\n  votes      PostVote[]\n  comments   Comment[]\n}\n\n/// --- コメント関連 ---\nmodel Comment {\n  id         Int      @id @default(autoincrement())\n  post_id    Int\n  user_id    Int\n  content    String\n  created_at DateTime @default(now())\n\n  post  Post          @relation(fields: [post_id], references: [id])\n  user  User          @relation(fields: [user_id], references: [id])\n  likes CommentLike[]\n  votes CommentVote[]\n}\n\n/// --- 投稿へのリアクション ---\nmodel PostLike {\n  id         Int      @id @default(autoincrement())\n  post_id    Int\n  user_id    Int\n  created_at DateTime @default(now())\n\n  post Post @relation(fields: [post_id], references: [id])\n  user User @relation(fields: [user_id], references: [id])\n\n  @@unique([post_id, user_id]) // ユーザーは1つの投稿に1回しかいいねできない\n}\n\nmodel PostVote {\n  id         Int      @id @default(autoincrement())\n  post_id    Int\n  user_id    Int\n  vote_type  VoteType\n  created_at DateTime @default(now())\n\n  post Post @relation(fields: [post_id], references: [id])\n  user User @relation(fields: [user_id], references: [id])\n\n  @@unique([post_id, user_id]) // ユーザーは1つの投稿に1回しか投票できない\n}\n\n/// --- コメントへのリアクション ---\nmodel CommentLike {\n  id         Int      @id @default(autoincrement())\n  comment_id Int\n  user_id    Int\n  created_at DateTime @default(now())\n\n  comment Comment @relation(fields: [comment_id], references: [id])\n  user    User    @relation(fields: [user_id], references: [id])\n\n  @@unique([comment_id, user_id]) // ユーザーは1つのコメントに1回しかいいねできない\n}\n\nmodel CommentVote {\n  id         Int      @id @default(autoincrement())\n  comment_id Int\n  user_id    Int\n  vote_type  VoteType\n  created_at DateTime @default(now())\n  comment    Comment  @relation(fields: [comment_id], references: [id])\n  user       User     @relation(fields: [user_id], references: [id])\n\n  @@unique([comment_id, user_id]) // ユーザーは1つのコメントに1回しか投票できない\n}\n\n/// --- 投票の種類を定義する列挙型 ---\nenum VoteType {\n  GOOD\n  BAD\n}\n",
  "inlineSchemaHash": "37c01418a3e4caa3c0f054d456911d28e3c7f0ab70dae3f39caab4145857848c",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"karma_score\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"posts\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToUser\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentToUser\"},{\"name\":\"post_likes\",\"kind\":\"object\",\"type\":\"PostLike\",\"relationName\":\"PostLikeToUser\"},{\"name\":\"post_votes\",\"kind\":\"object\",\"type\":\"PostVote\",\"relationName\":\"PostVoteToUser\"},{\"name\":\"comment_likes\",\"kind\":\"object\",\"type\":\"CommentLike\",\"relationName\":\"CommentLikeToUser\"},{\"name\":\"comment_votes\",\"kind\":\"object\",\"type\":\"CommentVote\",\"relationName\":\"CommentVoteToUser\"}],\"dbName\":null},\"Post\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PostToUser\"},{\"name\":\"likes\",\"kind\":\"object\",\"type\":\"PostLike\",\"relationName\":\"PostToPostLike\"},{\"name\":\"votes\",\"kind\":\"object\",\"type\":\"PostVote\",\"relationName\":\"PostToPostVote\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentToPost\"}],\"dbName\":null},\"Comment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"CommentToPost\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CommentToUser\"},{\"name\":\"likes\",\"kind\":\"object\",\"type\":\"CommentLike\",\"relationName\":\"CommentToCommentLike\"},{\"name\":\"votes\",\"kind\":\"object\",\"type\":\"CommentVote\",\"relationName\":\"CommentToCommentVote\"}],\"dbName\":null},\"PostLike\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToPostLike\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PostLikeToUser\"}],\"dbName\":null},\"PostVote\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"vote_type\",\"kind\":\"enum\",\"type\":\"VoteType\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"post\",\"kind\":\"object\",\"type\":\"Post\",\"relationName\":\"PostToPostVote\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PostVoteToUser\"}],\"dbName\":null},\"CommentLike\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"comment\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentToCommentLike\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CommentLikeToUser\"}],\"dbName\":null},\"CommentVote\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"vote_type\",\"kind\":\"enum\",\"type\":\"VoteType\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"comment\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentToCommentVote\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CommentVoteToUser\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

